group 'uk.gov.dvsa.mot'
version '0.1'

task wrapper(type: Wrapper) {
  gradleVersion = '3.3'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-bin.zip"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

mainClassName = 'uk.gov.dvsa.moti.web.MotIntelligenceApplication'

jar {
    archiveName "${baseName}.${extension}"
    manifest {
        attributes 'Main-Class': mainClassName
    }
}
sourceCompatibility = 1.8

project.ext {
    dropwizardVersion = '1.0.5'
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

sourceSets {
    test {
        java.srcDir 'src/test/unit/java'
        resources.srcDir 'src/test/unit/resources'
    }
    integrationTest {
        java.srcDir 'src/test/integration/java'
        resources.srcDir 'src/test/integration/resources'
    }
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    group = 'verification'
    description = 'Runs the integration tests.'
    systemProperty "configurationFilePath", System.getProperty("configurationFilePath")!=null ? System.getProperty("configurationFilePath") :  "config.yml"
}

repositories {
    mavenCentral()
    maven {
        url "http://nexus-prd.motdev.org.uk:8080/nexus/content/repositories/mot/"
    }
    maven {
        url "http://nexus-prd.motdev.org.uk:8080/nexus/content/repositories/mot-snapshots/"
    }
}

dependencies {
    testCompile (
            'io.dropwizard:dropwizard-testing:' + dropwizardVersion,
            'org.mockito:mockito-core:1.10.19',
    )
    compile (
        'io.dropwizard:dropwizard-core:' + dropwizardVersion,
        'io.dropwizard:dropwizard-assets:' + dropwizardVersion,
        'io.codemonastery:dropwizard-views-handlebars:1.0.0.0',
        'uk.gov.dvsa.mot:common-libraries:1.0.0',
        group: 'log4j', name: 'log4j', version: '1.2.17',
        project(':core'),
    )
    integrationTestCompile (
        sourceSets.main.output,
        configurations.testCompile,
    )
}

shadowJar {
    baseName = 'moti-webapp'
    archiveName = "${baseName}-all.${extension}"
    mergeServiceFiles()
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

run {
    args 'server', 'config.yml'
}

apply plugin: 'nebula.rpm'
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-ospackage-plugin:2.2.0'
    }
}

// BuildNumber has to be set by -PBuildNumber or ORG_GRADLE_PROJECT_BuildNumber env var
task BuildRpm(type: Rpm) {
    packageName 'moti-webapp'
    version = project.version
    release = project.hasProperty('BuildNumber') ? BuildNumber : 'dev'
    packageDescription = project.hasProperty('DescriptionRPM') ? DescriptionRPM: 'none'
    user 'moti-webapp'
    permissionGroup 'moti-webapp'
    license 'Proprietary'
    url 'https://gitlab.motdev.org.uk/moti/mot-intelligence'
    arch X86_64
    os LINUX
    type BINARY

    preInstall file('../scripts/rpm/preInstall')
    postInstall file('../scripts/rpm/postInstall')
    preUninstall file('../scripts/rpm/preUninstall')
    postUninstall file('../scripts/rpm/postUninstall')

    from('config.yml.dist') {
      into '/etc/dvsa/moti-webapp/'
      rename { String fileName ->
          fileName.replace('config.yml.dist', 'config.yml')
      }
      fileMode 0750
      user 'root'
      permissionGroup 'moti-webapp'
      fileType CONFIG | NOREPLACE
    }

    from ('../scripts/init') {
       into 'bin'
       user 'root'
       permissionGroup 'root'
       fileMode 0755
    }

    into '/opt/dvsa/moti-webapp'
    from ('build/libs/moti-webapp-all.jar') {
      fileMode 0750
      user 'root'
      permissionGroup 'moti-webapp'
      into 'lib'
    }

    requires ('java-1.8.0-openjdk', '1.8.0.65', GREATER | EQUAL)
    link ('/etc/init.d/moti-webapp', '/opt/dvsa/moti-webapp/bin/init')
    link ('/opt/dvsa/moti-webapp/log', '/var/log/dvsa/moti-webapp')
    link ('/opt/dvsa/moti-webapp/conf', '/etc/dvsa/moti-webapp')
}